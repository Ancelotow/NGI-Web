<?php

namespace NG\GestionnaireBundle\Repository;

/**
 * LotRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LotRepository extends \Doctrine\ORM\EntityRepository
{

    public function allLot()
    {
        $qb =$this->_em->createQueryBuilder();
        $qb->select('l')
            ->from('NGGestionnaireBundle:Lot', 'l')
            ->orderBy('l.num');
        $query = $qb->getQuery();
        $resultat = $query->getResult();
        return $resultat;
    }

    public function unLot($num, $copro)
    {
        $qb =$this->_em->createQueryBuilder();
        $qb->select('l')
            ->from('NGGestionnaireBundle:Lot', 'l')
            ->where('l.num = :num')
            ->andWhere('l.copro = :copro')
            ->setParameter('copro', $copro)
            ->setParameter('num', $num);
        $query = $qb->getQuery();
        $resultat = $query->getOneOrNullResult();
        return $resultat;
    }

    public function lotCopro($copro)
    {
        $qb =$this->_em->createQueryBuilder();
        $qb->select('l')
            ->from('NGGestionnaireBundle:Lot', 'l')
            ->where('l.copro = :copro')
            ->setParameter('copro', $copro);
        $query = $qb->getQuery();
        $resultat = $query->getResult();
        return $resultat;
    }

    public function propsLot($copro)
    {
        $qb =$this->_em->createQueryBuilder();
        $qb->select('l')
            ->from('NGGestionnaireBundle:Lot', 'l')
            ->where('l.copro = :copro')
            ->groupBy('l.proprietaire')
            ->orderBy('l.proprietaire')
            ->setParameter('copro', $copro);
        $query = $qb->getQuery();
        $resultat = $query->getResult();
        return $resultat;
    }


}
